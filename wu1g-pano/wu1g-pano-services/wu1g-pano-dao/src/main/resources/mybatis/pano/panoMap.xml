<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wu1g.dao.pano.IPanoMapDao">
    <!-- 字段列表 -->
    <sql id="Base_Column_List">
		 t1.proj_id as  "projId"
        ,t1.scene_id as  "sceneId"
        ,t1.rotate as  "rotate"
        ,t1.x as  "x"
        ,t1.y as  "y"
        ,t1.create_id as  "createId"
        ,t1.date_created as  "dateCreated"
	</sql>

    <!-- 根据主键获取信息详情 -->
    <select id="selectByPrimaryKey" resultType="panoMap" parameterType="panoMap">
        select
        <include refid="Base_Column_List"/>
        from pano_map t1
        where
        t1.proj_id = #{projId}
        and
        t1.scene_id = #{sceneId}
    </select>

    <!-- 根据主键物理删除信息 -->
    <delete id="deleteByPrimaryKey" parameterType="panoMap">
		delete
		from pano_map
		where  
		proj_id = #{projId}
		and
		scene_id = #{sceneId}
	</delete>

    <!-- 新增单条数据 -->
    <insert id="insert" parameterType="panoMap" useGeneratedKeys="true" keyProperty="id">
		insert into pano_map(
             proj_id
            ,scene_id
            ,rotate
            ,x
            ,y
            ,create_id
            ,date_created
		) values (
             #{projId}
            ,#{sceneId}
            ,#{rotate}
            ,#{x}
            ,#{y}
            ,#{createId}
            ,now()
		)
	</insert>

    <!-- 新增 批量数据 -->
    <insert id="insertBatch">
        insert into pano_map(
             proj_id
            ,scene_id
            ,rotate
            ,x
            ,y
            ,create_id
            ,date_created
        ) values
        <foreach collection="list" item="t" separator=",">
            (
                 #{t.projId}
                ,#{t.sceneId}
                ,#{t.rotate}
                ,#{t.x}
                ,#{t.y}
                ,#{t.createId}
                ,now()
            )
        </foreach>
    </insert>

    <!-- 数据更新 -->
    <update id="update" parameterType="panoMap">
        update pano_map set
        version=version+1,date_updated=now()
        <if test="rotate!= null">,rotate=#{rotate}</if>
        <if test="x!= null">,x=#{x}</if>
        <if test="y!= null">,y=#{y}</if>
        where
        proj_id= #{projId}
        and
        scene_id= #{sceneId}
    </update>

    <!-- 判断是否存在 -->
    <select id="isDataYN" parameterType="panoMap" resultType="int">
		select 
			count(0) 
		from pano_map
		where 
			proj_id = #{projId}
			and
			scene_id = #{sceneId}
	</select>

    <!--信息列表 -->
    <select id="findDataIsList" parameterType="panoMap" resultType="panoMap">
        select
        <include refid="Base_Column_List"/>
        from pano_map t1
        inner join pano_scene t2 on t1.scene_id=t2.id
        where t1.proj_id = #{projId}
        <if test="dateBegin!=null and dateBegin!=''">
            <![CDATA[ and DATE_FORMAT(t1.date_created,'%Y-%m-%d')>=DATE_FORMAT(#{dateBegin},'%Y-%m-%d')]]>
        </if>
        <if test="dateEnd!=null and dateEnd!=''">
            <![CDATA[ and DATE_FORMAT(t1.date_created,'%Y-%m-%d')<=DATE_FORMAT(#{dateEnd},'%Y-%m-%d')]]>
        </if>
        order by t1.date_created desc
    </select>

    <delete id="deleteByProjId" parameterType="panoMap">
		delete
		from pano_map
		where  
		proj_id=#{projId}
	</delete>
</mapper>