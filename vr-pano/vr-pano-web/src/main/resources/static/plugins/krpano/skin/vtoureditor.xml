<krpano>
	<!-- a style for a simple textfield element -->
	<style name="text"
		   url="%SWFPATH%/plugins/textfield.swf"
		   background="false"
		   css="color:#FFFFFF;"
		   enabled="false"
		   align="center"
	/>

	<!-- a style for a simple container element -->
	<style name="container"
		   type="container"
		   keep="true"
		   width="60"
		   height="20"
		   bgcolor="0x000000"
		   bgalpha="0.5"
		   bgcapture="true"
		   align="lefttop"
	/>

	<!-- a style for simple button -->
	<style name="subbtn"
		   type="container"
		   keep="true"
		   width="60"
		   height="20"
		   bgcolor="0x000000"
		   bgalpha="0.5"
		   bgcapture="true"
		   align="lefttop"
		   onover="set(bgalpha,0.7);"
		   onout="set(bgalpha,0.5)"
	/>
	<!-- 下载动态更新热点、起始角度 -->
	<events name="loading_elements"
			keep="true"
			onxmlcomplete="start_loading_elements();"
	/>
	<layer name="set_container" style="subbtn" width="80" x="10" y="10"  onclick="set_startview();">
		<layer name="set_txt" style="text" html="设为初始角度" />
	</layer>

	<layer name="add_container" style="subbtn" x="100" y="10"  onclick="add_hotspot('set_hotspot_box',0);">
		<layer name="add_txt" style="text" html="热点设置" />
	</layer>
	<layer name="set_hotspot_box" type="container" align="lefttop" x="100" y="32" keep="true" visible="false">
		<layer name="con_add_txt_p_0" style="subbtn" x="0" y="0"  onclick="confirm_hotspot(0);">
			<layer name="con_add_txt_0" style="text" html="场景切换" />
		</layer>
		<layer name="con_add_txt_p_1" style="subbtn" x="0" y="22"  onclick="confirm_hotspot(1);">
			<layer name="con_add_txt_1" style="text" html="装饰图片" />
		</layer>
		<layer name="con_add_txt_p_2" style="subbtn" x="0" y="44"  onclick="confirm_hotspot(2);">
			<layer name="con_add_txt_2" style="text" html="外部链接" />
		</layer>
		<layer name="con_add_txt_p_3" style="subbtn" x="0" y="66"  onclick="confirm_hotspot(3);">
			<layer name="con_add_txt_3" style="text" html="图文介绍" />
		</layer>
		<layer name="con_add_txt_p_4" style="subbtn" x="0" y="88"  onclick="confirm_hotspot(4);">
			<layer name="con_add_txt_4" style="text" html="语音热点" />
		</layer>
		<layer name="con_add_txt_p_5" style="subbtn" x="0" y="110"  onclick="confirm_hotspot(5);">
			<layer name="con_add_txt_5" style="text" html="视频热点" />
		</layer>
		<layer name="done_add_txt_p" style="subbtn" x="0" y="142"  onclick="done_add_hotspot();">
			<layer name="done_add_txt" style="text" html="完成" />
		</layer>
		<layer name="can_add_txt_p" style="subbtn" x="0" y="164"  onclick="cancel_add_hotspot();">
			<layer name="can_add_txt" style="text" html="取消" />
		</layer>
	</layer>

	<layer name="move_h_container" style="subbtn" x="170" y="10" onclick="move_hotspot();">
		<layer name="move_h_txt" style="text" html="移动热点" />
	</layer>
	<layer name="move_h_btn_box" type="container" align="lefttop" x="170" y="40" keep="true" visible="false">
		<layer name="move_h_txt_p" style="subbtn" x="0" y="0"  onclick="move_hotspot_done();">
			<layer name="move_h_txt_d" style="text" html="完成"/>
		</layer>
	</layer>

	<layer name="rotate_container" style="subbtn" width="70" x="240" y="10"  onclick="rotate_hotspot();">
		<layer name="rotate_txt" style="text" html="旋转热点" />
	</layer>
	<layer name="rotate_btn_box" type="container" align="lefttop" x="240" y="40" keep="true" visible="false">
		<layer name="rotate_s_txt_p" style="subbtn" width="70" x="0" y="0" onclick="rotate_set_angle(15);">
			<layer name="rotate_s_txt" style="text" html="顺时针+15°" />
		</layer>
		<layer name="rotate_n_txt_p" style="subbtn" width="70" x="0" y="30" onclick="rotate_set_angle(-15)">
			<layer name="rotate_n_txt" style="text" html="逆时针+15°" />
		</layer>
		<layer name="rotate_done_p" style="subbtn" width="70" x="0" y="60" onclick="rotate_hotspot_done();">
			<layer name="rotate_done" style="text" html="完成" />
		</layer>
	</layer>

	<layer name="del_h_container" style="subbtn" x="320" y="10" onclick="remove_hotspot();">
		<layer name="del_h_txt" style="text" html="删除热点" />
	</layer>
	<layer name="del_h_btn_box" type="container" align="lefttop" x="320" y="40" keep="true" visible="false">
		<layer name="del_h_txt_p" style="subbtn" x="0" y="0"  onclick="remove_hotspot_done();">
			<layer name="del_h_txt_d" style="text" html="完成"/>
		</layer>
	</layer>

	<layer name="radar_container" style="container" x="390" y="10"  onclick="js(showRadar())">
		<layer name="radar_txt" style="text" html="设置导览图" />
	</layer>

	<layer name="save_container" style="subbtn" x="600" y="10"  onclick="save_set();">
		<layer name="save_txt" style="text" html="保存设置" />
	</layer>

	<!-- 上传图片 control -->
	<layer name="skin_picctrl" type="container" keep="true" align="rightop" width="210" height="126" x="10" y="10" bgcolor="get:skin_settings.design_bgcolor" bgalpha="get:skin_settings.design_bgalpha" bgborder="get:skin_settings.design_bgborder" bgroundedge="get:skin_settings.design_bgroundedge" bgshadow="get:skin_settings.design_bgshadow" bgcapture="false" visible="false">
		<layer name="skin_sizectrl_bar_container" type="container" align="lefttop" width="210" height="32">
			<layer name="skin_sizectrl_txt" type="text" width="60" height="32" url="%SWFPATH%/plugins/textfield.swf" background="false" css="color:#ffffff;line-height:28px;" html="缩放图片" />
			<layer name="skin_sizectrl_bar" type="container" bgcolor="0xFFFFFF" bgalpha="0.8" align="right" x="5" width="150" height="2">
				<layer name="skin_sizectrl_pos" type="container" bgcapture="true" ondown="skin_picctrl_ondownchanging('size');" bgcolor="0xfe5500" bgalpha="1.0" align="top" edge="center" x="0" bgroundedge="8" width="10" height="10" />
			</layer>
		</layer>
		<layer name="skin_zctrl_bar_container" type="container" align="lefttop" y="32" width="210" height="32">
			<layer name="skin_zctrl_txt" type="text" width="60" height="32" url="%SWFPATH%/plugins/textfield.swf" background="false" css="color:#ffffff;line-height:28px;" html="设置纵深" />
			<layer name="skin_zctrl_bar" type="container" bgcolor="0xFFFFFF" bgalpha="0.8" align="right" x="5" width="150" height="2">
				<layer name="skin_zctrl_pos" type="container" bgcapture="true" ondown="skin_picctrl_ondownchanging('z');" bgcolor="0xfe5500" bgalpha="1.0" align="top" edge="center" x="0" bgroundedge="8" width="10" height="10" />
			</layer>
		</layer>
		<layer name="skin_xctrl_bar_container" type="container" align="lefttop" y="64" width="210" height="32">
			<layer name="skin_xctrl_txt" type="text" width="60" height="32" url="%SWFPATH%/plugins/textfield.swf" background="false" css="color:#ffffff;line-height:28px;" html="旋转图片" />
			<layer name="skin_xctrl_bar" type="container" bgcolor="0xFFFFFF" bgalpha="0.8" align="right" x="5" width="150" height="2">
				<layer name="skin_xctrl_pos" type="container" bgcapture="true" ondown="skin_picctrl_ondownchanging('x');" bgcolor="0xfe5500" bgalpha="1.0" align="top" edge="center" x="0" bgroundedge="8" width="10" height="10" />
			</layer>
		</layer>
		<layer name="skin_imghot_is_on_click_bar_container" type="container" align="lefttop" y="94" width="210" height="32">
			<layer name="skin_imghot_is_on_click_txt" type="text" width="60" height="32" url="%SWFPATH%/plugins/textfield.swf" background="false" css="color:#ffffff;line-height:28px;" html="可否点击" />
			<layer name="skin_imghot_is_on_click_bar" type="container"  align="right" x="5" width="150">
				<plugin name="skin_imghot_is_on_click_combobox"
						url="%SWFPATH%/plugins/combobox.swf"
						alturl="%SWFPATH%/plugins/combobox.js"
						align="leftbottom"
						width="150"
						x="5"
						y="-10"
				>
					<item name="is_onclick_0" caption="不可点击" onclick="skin_picctrl_is_on_click('0')" />
					<item name="is_onclick_1" caption="点击展示" onclick="skin_picctrl_is_on_click('1')" />
				</plugin>
			</layer>
		</layer>
	</layer>

	<!-- 控制图片大小、纵深、旋转 -->
	<action name="skin_picctrl_ondownchanging">
		txtadd(skin_typectrl_bar,'skin_',%1,'ctrl_bar');
		txtadd(skin_typectrl_pos,'skin_',%1,'ctrl_pos');
		asyncloop(pressed,
		screentolayer(get(skin_typectrl_bar), mouse.stagex,mouse.stagey, lx,ly);
		calc(numctrl_pos, 1.0 - (lx / layer[get(skin_typectrl_bar)].pixelwidth));
		clamp(numctrl_pos, 0.0, 1.0);
		calc(layer[get(skin_typectrl_pos)].x, ((0.5 - numctrl_pos) * 100) + '%');
		if(%1=='size',
		sub(numctrl_pos,1);
		Math.abs(numctrl_pos);
		mul(numctrl_pos,2);
		<!-- 			   jscall(calc('console.log("缩略图片:'+numctrl_pos+'")'));	 -->
		set(hotspot[get(picspot)].scale,get(numctrl_pos)),
		if(%1=='z',
		mul(numctrl_pos,2000);
		<!-- 				   jscall(calc('console.log("设置纵深:'+numctrl_pos+'")'));	 -->
		set(hotspot[get(picspot)].depth,get(numctrl_pos)),
		sub(numctrl_pos,0.5);
		mul(numctrl_pos,360);
		<!-- 				   jscall(calc('console.log("旋转图片:'+numctrl_pos+'")'));	 -->
		set(hotspot[get(picspot)].rotate,get(numctrl_pos))
		)
		);
		);
	</action>
	<!-- 控制图片是否可以点击展示 -->
	<action name="skin_picctrl_is_on_click">
		if(%1=='0',
		set(picctrl_is_on_click,0),
		set(picctrl_is_on_click,1)
		)
	</action>
	<!-- 通用提示信息 -->
	<layer name="notice_container" type="container" align="center" y="-50" keep="true" visible="false">
		<layer name="notice" style="text" html="ffff" css="color:#ffffff;font-size:25px;font-family:Microsoft yahei;"/>
	</layer>

	<!-- 设置初始角度 -->
	<action name="set_startview">
		<!-- 取得当前视角 -->
		copy(hlookat,view.hlookat);
		copy(vlookat,view.vlookat);
		<!-- 		jscall(calc('console.log("当前视角：hlookat:'+hlookat+',vlookat:'+vlookat+'")')); -->
		js(save_xml_data(get(scene[get(xml.scene)].name),'view',get(hlookat),get(vlookat)));
	</action>

	<!-- 保存设置 -->
	<action name="save_set">
		js(post_xml_data());
	</action>

	<!-- 显示添加热点 -->
	<action name="add_hotspot" keep="true">
		set(current_hotspot_type,null);
		<!-- 生成随机数 -->
		jsget(hs_n,generateMixed(22));
		show_notice_msg('左键拖动热点进行定位');
		<!-- 生成热点 -->
		<!-- 取得当前视角 -->
		copy(hlookat,view.hlookat);
		copy(vlookat,view.vlookat);
		txtadd(newspot,'hotspot_',get(hs_n));
		addhotspot(get(newspot));
		set(hotspot[get(newspot)].ath,get(hlookat));
		set(hotspot[get(newspot)].atv,get(vlookat));
		<!-- %2 类型0场景切换1图片2外部链接3图文介绍4语音热点5视频热点-->
		if(%2==2,
		set(hotspot[get(newspot)].url,%SWFPATH%/skin/animatedhotspot_white.png);
		set(hotspot[get(newspot)].crop,'0|0|64|64');
		,
		set(hotspot[get(newspot)].url,%SWFPATH%/skin/vtourskin_hotspot.png);
		set(hotspot[get(newspot)].crop,'0|0|128|128');
		);
		set(hotspot[get(newspot)].rotate,0);
		set(hotspot[get(newspot)].scale,0.5);
		set(hotspot[get(newspot)].zoom,false);
		set(hotspot[get(newspot)].vr_timeout, 2000);
		set(hotspot[get(newspot)].ondown,draghotspot());
		<!-- 		set(hotspot[get(newspot)].onup,jscall(calc('console.log("热点坐标：ath:'+hlookat+',atv:'+vlookat+'")'))); -->
		<!-- 		jscall(calc('console.log("添加热点:'+newspot+'")')); -->

		<!-- 显示确认、取消添加按钮 -->
		set(layer[%1].visible,true);

		set_ele_status(false);
	</action>

	<!-- 拖动热点动态获取坐标 - call it once in the ondown event -->
	<action name="draghotspot">
		spheretoscreen(ath, atv, hotspotcenterx, hotspotcentery, 'l');
		sub(drag_adjustx, mouse.stagex, hotspotcenterx);
		sub(drag_adjusty, mouse.stagey, hotspotcentery);
		asyncloop(pressed,
		sub(dx, mouse.stagex, drag_adjustx);
		sub(dy, mouse.stagey, drag_adjusty);
		screentosphere(dx, dy, ath, atv);
		<!-- 将坐标赋值到当前热点 -->
		set(hlookat,get(ath));
		set(vlookat,get(atv));
		<!--jscall(calc('console.log("ath:'+ath+',atv:'+atv+'")'));-->
		);
	</action>

	<!-- 隐藏缩略图弹窗、隐藏确认|取消添加按钮 -->
	<action name="hide_scene_add_container">
		<!-- 还原所有列表背景为未选中 -->
		for(set(i,0),i LT scene.count,inc(i),
		set(layer[get(scene[get(i)].name)].bgcolor,"0x000000");
		);
		<!-- 还原未选中为null -->
		set(c_hotspot,null);
		set(layer[btn_con_link_container].enabled,false);
		set(layer[scene_thumb_container].visible,false);
		<!-- 显示确认、取消添加按钮 -->
		set(layer[set_hotspot_box].visible,false);
	</action>

	<!-- 添加热点 确定 -->
	<action name="confirm_hotspot">
		set(current_hotspot_type,%1);
		if(%1==0,set(layer[scene_thumb_container].visible,true););
		if(%1==1,up_pic(););
		if(%1==2,js(confirm_hotspot_2()););
		if(%1==3,js(alert('暂未开放')););
		if(%1==4,js(alert('暂未开放')););
		if(%1==5,js(alert('暂未开放')););
	</action>
	<!-- 添加热点 完成 -->
	<action name="done_add_hotspot">
		if(current_hotspot_type==null,js(alert('请选择热点类型!')),
		set(layer[set_hotspot_box].visible,false);
		if(current_hotspot_type==0,set(layer[scene_thumb_container].visible,true););
		if(current_hotspot_type==1,up_pic_done(););
		if(current_hotspot_type==2,js(confirm_hotspot_2()););
		if(current_hotspot_type==3,js(alert('暂未开放')););
		if(current_hotspot_type==4,js(alert('暂未开放')););
		if(current_hotspot_type==5,js(alert('暂未开放')););
		set_ele_status(true);
		);
	</action>
	<!-- 添加热点 取消 -->
	<action name="cancel_add_hotspot">
		txtadd('hname','hotspot_',get(hs_n));
		set(r_hotspot,get(hname));
		<!-- 	    jscall(calc('console.log("删除热点:'+r_hotspot+'")')); -->
		removehotspot(get(r_hotspot));
		set(layer[set_hotspot_box].visible,false);
		<!--set(layer[_link_container].enabled,false);-->
		if(current_hotspot_type==0,hide_scene_add_container(););
		if(current_hotspot_type==1,;);
		if(current_hotspot_type==2,hide_scene_add_link_container(););//TODO
		if(current_hotspot_type==3,js(alert('暂未开放')););
		if(current_hotspot_type==4,js(alert('暂未开放')););
		if(current_hotspot_type==5,js(alert('暂未开放')););
		set_ele_status(true);
		set(from_radar,0);
	</action>
	<!-- 选择一个scene（从scene缩略图列表中） -->
	<action name="select_scene">
		<!-- 还原所有列表背景为未选中 -->
		for(set(i,0),i LT scene.count,inc(i),
		txtadd(edit_scene_name,"edit_",get(scene[get(i)].name));
		<!-- 	   		   jscall(calc('console.log("当前name:'+edit_scene_name+'")')); -->
		set(layer[get(edit_scene_name)].bgcolor,"0x000000");
		);
		<!-- 设置选中 -->
		txtreplace(scene_name, name, "edit_", "");
		set(linkedscene,get(scene_name));
		set(layer[btn_con_link_container].enabled,true);
		set(bgcolor,"0x27aeff");
	</action>

	<!-- 确认链接scene -->
	<action name="confirm_linkded_scene">
		if(from_radar==1,
		jscall(calc('addRadarCrile("'+linkedscene+'")'));
		set(layer[scene_thumb_container].visible,false);
		,
		txtadd('hname','hotspot_',get(hs_n));
		set(c_hotspot,get(hname));
		set(hotspot[get(c_hotspot)].onclick,gotoscene(get(linkedscene)));
		set(hotspot[get(c_hotspot)].ondown,null);
		set(hotspot[get(c_hotspot)].onup,null);
		js(save_xml_data(get(scene[get(xml.scene)].name),'hotspots',get(hotspot[get(c_hotspot)].ath),get(hotspot[get(c_hotspot)].atv),get(linkedscene),get(hotspot[get(c_hotspot)].name)));
		hide_scene_add_container();
		set_ele_status(true);
		set(from_radar,0);
		)
	</action>
	<!-- 添加外链确定操作 -->
	<action name="confirm_linkded_scene_2">
		txtadd('hname','hotspot_',get(hs_n));
		set(c_hotspot,get(hname));

		jsget(hotspot_link_title,getInputValById('hotspot_link_title'));
		jsget(hotspot_link_url,getInputValById('hotspot_link_url'));

		<!-- %1 类型0场景切换1图片2外部链接3图文介绍4语音热点5视频热点-->
		set(hotspot[get(c_hotspot)].tooltip,get(hotspot_link_title));
		set(hotspot[get(c_hotspot)].style,"showtxt_hotspotstyle");
		set(hotspot[get(c_hotspot)].ondown,null);
		set(hotspot[get(c_hotspot)].onup,null);

		js(save_xml_data_2(
		get(scene[get(xml.scene)].name)
		,'linkSpots'
		,get(hotspot[get(c_hotspot)].ath)
		,get(hotspot[get(c_hotspot)].atv)
		,get(hotspot[get(c_hotspot)].name)
		,get(hotspot[get(c_hotspot)].scale)
		,get(hotspot[get(c_hotspot)].depth)
		,get(hotspot[get(c_hotspot)].rotate)
		,get(hotspot_link_url)
		,get(hotspot_link_title)
		));
		hide_scene_add_link_container();
		set_ele_status(true);
	</action>
	<!-- 显示旋转热点 -->
	<action name="rotate_hotspot">
		set(layer[rotate_btn_box].visible,true);
		set_ele_status(false);
	</action>

	<!-- 设置旋转角度 -->
	<action name="rotate_set_angle">
		set(layer[rotate_s_txt_p].bgcolor,'0x000000');
		set(layer[rotate_n_txt_p].bgcolor,'0x000000');
		set(bgcolor,"0x27aeff");
		set(rotate_angle_p,%1);
		<!-- 显示提示信息 -->
		show_notice_msg('左键点击热点进行旋转');
	</action>

	<!-- 隐藏旋转热点（完成）-->
	<action name="rotate_hotspot_done">
		set(rotate_angle_p,null);
		set(layer[rotate_s_txt_p].bgcolor,'0x000000');
		set(layer[rotate_n_txt_p].bgcolor,'0x000000');
		set(layer[rotate_btn_box].visible,false);
		set_ele_status(true);
	</action>

	<!-- 显示删除热点 -->
	<action name="remove_hotspot">
		<!-- 去除所有热点不可用状态 -->
		for(set(i,0),i LT hotspot.count,inc(i),
		<!-- 			jscall(calc('console.log("热点名称:'+hotspot[get(i)].name+'")')); -->
		set(hotspot[get(i)].enabled,true);
		);

		set(is_del_hp,true);
		set(layer[del_h_btn_box].visible,true);
		<!-- 显示提示信息 -->
		show_notice_msg('左键点击热点删除');
		set_ele_status(false);
	</action>

	<!-- 完成删除热点 -->
	<action name="remove_hotspot_done">
		set(is_del_hp,false);
		set(layer[del_h_btn_box].visible,false);
		set_ele_status(true);
	</action>

	<action name="remove_picspots">
		if(is_del_hp,
		js(del_xml_h(get(scene[get(xml.scene)].name),get(name)));
		removehotspot(get(name)),
		);
	</action>

	<!-- 显示上传图片 -->
	<action name="up_pic">
		set(is_up_pic,true);
		<!--set(layer[pic_btn_box].visible,true);-->
		<!-- 显示提示信息 -->
		js(up_pic());
		set_ele_status(false);
	</action>

	<!-- 添加图片热点 -->
	<action name="add_pic_hotspot">
		<!-- 生成热点 -->
		<!-- 取得当前视角 -->
		copy(hlookat,view.hlookat);
		copy(vlookat,view.vlookat);
		txtadd(picspot,'pic_',%1);
		addhotspot(get(picspot));
		set(hotspot[get(picspot)].url,%2);
		set(hotspot[get(picspot)].ath,get(hlookat));
		set(hotspot[get(picspot)].atv,get(vlookat));
		set(hotspot[get(picspot)].distorted,true);
		set(hotspot[get(picspot)].ondown,draghotspot());
		<!-- 		set(hotspot[get(picspot)].onup,jscall(calc('console.log("热点坐标：ath:'+hlookat+',atv:'+vlookat+'")'))); -->
		set(layer[skin_picctrl].visible,true);
		<!-- 		jscall(calc('console.log("添加热点:'+picspot+'")'));	 -->
	</action>


	<!-- 完成上传图片 -->
	<action name="up_pic_done">
		set(is_up_pic,false);
		<!--set(layer[pic_btn_box].visible,false);-->
		set(layer[skin_picctrl].visible,false);
		set(hotspot[get(picspot)].ondown,null);
		set(hotspot[get(picspot)].onup,null);
		set(hotspot[get(picspot)].onclick,remove_picspots());
		if(hotspot[get(picspot)].url,
		js(save_xml_data(get(scene[get(xml.scene)].name),
		'picspots',
		get(hotspot[get(picspot)].ath),
		get(hotspot[get(picspot)].atv),
		'',
		get(hotspot[get(picspot)].name),
		get(hotspot[get(picspot)].scale),
		get(hotspot[get(picspot)].depth),
		get(hotspot[get(picspot)].rotate),
		get(hotspot[get(picspot)].url),
		get(picctrl_is_on_click)
		)),
		removehotspot(get(picspot));
		);
		set_ele_status(true);
	</action>

	<!-- 显示移动热点 -->
	<action name="move_hotspot">
		set(layer[move_h_btn_box].visible,true);
		for(set(i,0),i LT hotspot.count,inc(i),
		set(hotspot[get(i)].ondown,draghotspot());
		set(hotspot[get(i)].onup,
		<!-- 			jscall(calc('console.log("热点坐标：ath:'+hlookat+',atv:'+vlookat+'")')); -->
		js(move_xml_h(get(scene[get(xml.scene)].name),get(name),get(hlookat),get(vlookat))););
		);
		<!-- 显示提示信息 -->
		show_notice_msg('左键拖动热点进行定位');
		set_ele_status(false);
	</action>

	<!-- 完成移动热点 -->
	<action name="move_hotspot_done">
		for(set(i,0),i LT hotspot.count,inc(i),
		set(hotspot[get(i)].ondown,null);
		set(hotspot[get(i)].onup,null);
		);
		set(layer[move_h_btn_box].visible,false);
		set_ele_status(true);
	</action>

	<!-- 设置本身之外的元素无法获取 -->
	<action name="set_ele_status">
		set(layer[set_container].enabled,%1);
		set(layer[add_container].enabled,%1);
		set(layer[rotate_container].enabled,%1);
		set(layer[move_h_container].enabled,%1);
		set(layer[del_h_container].enabled,%1);
		set(layer[radar_container].enabled,%1);
		set(layer[pic_container].enabled,%1);
		set(layer[save_container].enabled,%1);
		if(%1===true,
		set(current_hotspot_type,null);
		set(layer[set_container].bgalpha,0.5);
		set(layer[add_container].bgalpha,0.5);
		set(layer[rotate_container].bgalpha,0.5);
		set(layer[move_h_container].bgalpha,0.5);
		set(layer[del_h_container].bgalpha,0.5);
		set(layer[radar_container].bgalpha,0.5);
		set(layer[pic_container].bgalpha,0.5);
		set(layer[save_container].bgalpha,0.5);
		);
	</action>

	<!-- 显示提示信息 -->
	<action name="show_notice_msg">
		set(layer[notice].html,%1);
		set(layer[notice_container].visible,true);
		tween(layer[notice_container].alpha, 0.0, 2, easeInQuint);
		delayedcall(2,set(layer[notice_container].visible,false);set(layer[notice_container].alpha,1););
	</action>

	<!-- scene跳转 -->
	<action name="gotoscene">
		if(rotate_angle_p,
		add(n_n_angle,rotate,rotate_angle_p);
		<!-- 		jscall(calc('console.log("旋转热点:'+n_n_angle+'")')); -->
		<!-- 保存到js -->
		js(save_xml_data(get(scene[get(xml.scene)].name),'rotate',get(name),get(n_n_angle)));
		set(rotate,get(n_n_angle)),
		if(is_del_hp,
		<!-- 		jscall(calc('console.log("删除热点:'+name+'")')); -->
		js(del_xml_h(get(scene[get(xml.scene)].name),get(name)));
		removehotspot(get(name)),
		mul(newdepth, depth, 2);
		skin_hidehotspot_vr();
		tween(depth, get(newdepth), 0.25);
		tween(oy|alpha|rx, -100|0|45, 0.25, default, loadscene(%1, null, MERGE, BLEND(2)));
		);
		);
	</action>

	<!-- 切换(加载)场景时自动加载热点、初始角度 -->
	<action name="start_loading_elements">
		js(init_xml_data());
	</action>
</krpano>