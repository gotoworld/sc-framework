<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hsd.account.staff.dao.auth.IAuthRoleDao">
    <!-- 字段列表 -->
    <sql id="Base_Column_List">
		 t1.id as "id"
        ,t1.name as "name"
        ,t1.is_super as "isSuper"
        ,t1.memo as "memo"
        ,t1.order_no as "orderNo"
        ,t1.version as "version"
        ,t1.keyword as "keyword"
        ,t1.del_flag as "delFlag"
        ,t1.date_created as "dateCreated"
        ,t1.date_updated as "dateUpdated"
	</sql>
    <!-- 根据主键获取信息详情 -->
    <select id="selectByPrimaryKey" resultType="com.hsd.account.staff.entity.auth.AuthRole" parameterType="com.hsd.account.staff.entity.auth.AuthRole">
        select
        <include refid="Base_Column_List"/>
        from auth_role t1
        where t1.id = #{id}
    </select>
    <!-- 新增单条数据 -->
    <insert id="insert" parameterType="com.hsd.account.staff.entity.auth.AuthRole" useGeneratedKeys="true" keyProperty="id">
		insert into auth_role (
            name
           ,is_super
           ,memo
           ,order_no
           ,version
           ,keyword
           ,del_flag
           ,date_created
           ,date_updated
        ) values (
            #{name}
           ,#{isSuper}
           ,#{memo}
           ,#{orderNo}
           ,0
           ,#{keyword}
           ,0
           ,now()
           ,now()
        )
	</insert>
    <!-- 数据更新 -->
    <update id="update" parameterType="com.hsd.account.staff.entity.auth.AuthRole">
        update auth_role set version=version+1,date_updated=now()
        <if test="name!= null" >,name=#{name}</if>
        <!--<if test="isSuper!= null" >,is_super=#{isSuper}</if>-->
        <if test="memo!= null" >,memo=#{memo}</if>
        <if test="orderNo!= null" >,order_no=#{orderNo}</if>
        <if test="keyword!= null" >,keyword=#{keyword}</if>
        where id = #{id}
    </update>
    <!--列表通用条件-->
    <sql id="list_where_sql">
        <choose>
            <when test="delFlag!=null">
                and t1.del_flag=#{delFlag}
            </when>
            <otherwise>
                and t1.del_flag=0
            </otherwise>
        </choose>
        <if test="name!=null and name!=''">
            and t1.name like CONCAT('%',#{name},'%')
        </if>
        <if test="isSuper!=null and isSuper==0">
            and t1.is_super!=1
        </if>
        <if test="dateBegin!=null and dateBegin!=''">
            <![CDATA[ and DATE_FORMAT(t1.date_created,'%Y-%m-%d')>=DATE_FORMAT(#{dateBegin},'%Y-%m-%d')]]>
        </if>
        <if test="dateEnd!=null and dateEnd!=''">
            <![CDATA[ and DATE_FORMAT(t1.date_created,'%Y-%m-%d')<=DATE_FORMAT(#{dateEnd},'%Y-%m-%d')]]>
        </if>
    </sql>
    <!--信息列表 分页 -->
    <select id="findDataIsPage" parameterType="com.hsd.account.staff.entity.auth.AuthRole" resultType="com.hsd.account.staff.entity.auth.AuthRole">
        select
        <include refid="Base_Column_List"/>
        from auth_role t1
        where t1.id!=1
        <include refid="list_where_sql"/>
    </select>
    <!--信息列表 -->
    <select id="findDataIsList" parameterType="com.hsd.account.staff.entity.auth.AuthRole" resultType="com.hsd.account.staff.entity.auth.AuthRole">
        select
         t1.id as "id"
        ,t1.name as "name"
        ,t1.is_super as "isSuper"
        from auth_role t1
        where t1.id!=1
        <include refid="list_where_sql"/>
    </select>

    <!-- 角色信息列表>根据用户id -->
    <select id="getRoleListByUId" resultType="com.hsd.account.staff.entity.auth.AuthRole" parameterType="map">
        <choose>
            <when test="iissuperman==1"><!-- i'm superman -->
                select
                <include refid="Base_Column_List"/>
                from auth_role t1
                where t1.del_flag=0 and t1.is_super!='1'
            </when>
            <otherwise>
                select
                 t1.id as "id"
                ,t1.name as "name"
                ,t1.is_super as "isSuper"
                from auth_role t1
                inner join auth_user_vs_role t2 on (t1.id=t2.role_id)
                where t1.del_flag=0 and t2.user_id=#{uid} and t1.is_super!='1'

                union

                select
                 t1.id as "id"
                ,t1.name as "name"
                ,t1.is_super as "isSuper"
                from auth_role t1
                inner join org_org_vs_role t2 on (t1.id=t2.role_id)
                inner join org_org_vs_user t3 on (t2.org_id=t3.org_id and t3.user_id=#{uid})
                where t1.del_flag=0 and t1.is_super!='1'
            </otherwise>
        </choose>
    </select>
    <!-- 根据用户id,判断用户是否为超级管理员,要的就是特权. -->
    <select id="isSuperAdmin" resultType="int" parameterType="map">
		select count(0) from auth_role t1
		inner join auth_user_vs_role t2 on (t1.id=t2.role_id)
		where t2.user_id=#{uid} and t1.is_super=1
	</select>
</mapper>