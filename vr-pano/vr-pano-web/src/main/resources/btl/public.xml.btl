<include url="%SWFPATH%/skin/vtourskin.xml" />

<krpano flare_dir="%SWFPATH%/skin/lensflare" />
<include url="%SWFPATH%/skin/lensflare/core.xml" />

<security cors="anonymous">
	<crossdomainxml url="%SWFPATH%/crossdomain.xml" />
	<allowdomain domain="*" />
</security>
@[ if(proj.isFps == "1"){ /]
<include url="%SWFPATH%/plugins/fps.xml" />
@[ } /]
@[ if(isNotEmpty(proj.snowType)){ /]
<include url="%SWFPATH%/skin/snow.xml" />
@[ } /]
<include url="%SWFPATH%/skin/contextmenu.xml" />

<!-- startup action - load the first scene -->
<action name="startup" autorun="onstart">
	if(startscene === null OR !scene[get(startscene)], copy(startscene,scene[0].name); );
    loadscene(get(startscene), null, MERGE);
    <!-- loadscene(get(scene[get(startscene)].name), null, MERGE); -->
    if(startactions !== null, startactions() );
	<!-- sceneJump(); -->
</action>


<!-- 自动旋转 -->
<autorotate enabled="true"
		waittime="3.0" 
		speed="3.0" 
		horizon="0.0" 
		tofov="120.0" 
		/>
@[ if(isNotEmpty(proj.snowType)){ /]
<!-- 下雪效果-->
<plugin name="snow" zorder="1"  
       url="%SWFPATH%/plugins/snow.swf"  
       alturl="%SWFPATH%/plugins/snow.js"  
       floor="0.7"  
       keep="true"  
       onloaded="${proj.snowType}();"  
       />  
@[ } /]
		
<!-- 自动旋转一周 跳转到下一个场景 -->
<action name="sceneJump">
	set(a,0);
	if(autorotate.enabled==true,set(a,get(view.hlookat));
		if(a GT 355.00,skin_nextscene(););
	);
	delayedcall(tz,0.05,sceneJump() );
</action>
  
<action name="skin_nextscene">
	if(scene[get(xml.scene)].index==0,set(indexOperator, +1););
	if(scene[get(xml.scene)].index==scene.count-1,set(indexOperator, -1););

	add(newsceneindex, scene[get(xml.scene)].index,indexOperator);
	if(newsceneindex GE 0,
		if(newsceneindex LT scene.count,
			txtadd(layer[skin_thumbborder].parent, 'skin_thumb_', get(scene[get(xml.scene)].index));
			layer[skin_thumbs].scrolltocenter(get(scene[get(newsceneindex)].thumbx), get(scene[get(newsceneindex)].thumby));
			loadscene(get(newsceneindex), null, MERGE, BLEND(0.5));
		  );
	  );
</action>

 @[ if(isNotEmpty(proj.mapSrc)){ /]
	<!-- 导览图 -->
	<layer name="mapcontainer"  keep="true" type="container"  align="righttop" x="80" y="160" width="264" height="264" visible="false">
		<layer name="map" url="${proj.mapSrc}" align="top" x="0" y="0" width="100%" height="264" handcursor="false" scalechildren="true">
		</layer>
		<layer name="radarmask" type="container" align="lefttop"  width="100%" height="100%" maskchildren="true">
			<layer name="radar" visible="false"
			       url="%SWFPATH%/plugins/radar.swf" alturl="%SWFPATH%/plugins/radar.js"
			       align="lefttop" edge="center" zorder="1"
			       scale="0.3"
			       fillcolor="0xFFFFFF" fillalpha="0.8"
			       linecolor="0xFF0000" linewidth="0.5" linealpha="0.5" 
			       headingoffset="0"
			       />
			  <!-- 雷达列表 -->
			 @[ if(proj.radars!=null){ /]
     			@[ for(radar in proj.radars){ /]
					<layer name="${radar.sceneId}"  style="spot" x="${parseInt(radar.y)+30}" y="${parseInt(radar.x)+35}"  />
  				@[ } /]
        	 @[ } /]
			<layer name="activespot" url="%SWFPATH%/skin/vtourskin_mapspotactive.png"  width="57.2" height="71.5" scale="0.5" oy="-17" align="lefttop" edge="center" zorder="3" visible="false"/>
		</layer>
	</layer>

    <style name="spot" url="%SWFPATH%/skin/vtourskin_mapspot.png" scale="0.5" oy="-17" width="57.2" height="71.5" align="lefttop" edge="center" zorder="2" onclick="if(get(name) != xml.scene, loadscene(get(name),null,MERGE,BLEND(1)); );" />  


	<!-- 激活热点 - %1 = 当前雷达的方向值heading -->
	<action name="activatespot">  
    
    for(set(i,0),i LT scene.count,inc(i),  
   	 set(layer[get(scene[get(i)].name)].visible, true);  
    );  
  
  	if(%1===null,
  	<!-- jscall(calc('console.log("ath'+%1+'atv:")')); -->
	  	set(layer[radar].visible, false); 
	  	set(layer[activespot].visible, false);
		,
		set(spotidnow,get(xml.scene));  
	    copy(layer[radar].x, layer[get(spotidnow)].x);  
	    copy(layer[radar].y, layer[get(spotidnow)].y);  
	    copy(layer[activespot].x, layer[get(spotidnow)].x);  
	    copy(layer[activespot].y, layer[get(spotidnow)].y); 
	    set(layer[radar].heading, %1);  
	    set(layer[radar].visible, true);  
	    set(layer[activespot].visible, true);  
	    set(layer[get(spotidnow)].visible, false);  
  	)
   
    </action>  
@[ } /]

<!-- 自定义热点加载事件 -->
<action name="do_crop_animation">
		<!-- add attributes to the hotspot -->
		registerattribute(xframes, calc((imagewidth / %1) BOR 0));
		registerattribute(yframes, calc((imageheight / %2) BOR 0));
		registerattribute(frames, calc(xframes * yframes));
		registerattribute(frame, 0);

		set(crop, '0|0|%1|%2');

		setinterval(calc('crop_anim_' + name), calc(1.0 / %3),
			if(loaded,
				inc(frame);
				if(frame GE frames, if(onlastframe !== null, onlastframe() ); set(frame,0); );
				mod(xpos, frame, xframes);
				div(ypos, frame, xframes);
				Math.floor(ypos);
				mul(xpos, %1);
				mul(ypos, %2);
				calc(crop, xpos + '|' + ypos + '|%1|%2');
			  ,
				clearinterval(calc('crop_anim_' + name));
			  );
		  );
	</action>
	<!-- 打开新页面  ${is_edit_flag} -->
	<action name="openWinUrl">js(window.open(%1));</action>
<!--场景列表-->
@[ for(scene in proj.scenes){ /]
@[
   var radar_rotate=0;
   if(proj.radars != null){
  	 for(radar in proj.radars){
   		if(radar.sceneId==scene.id){
   			radar_rotate=radar.rotate;
   		}
	 }
	}
/]
   <scene name="${scene.id}" title="${scene.sceneTitle}" onstart="activatespot(${radar_rotate})"  havevrimage="true"  thumburl="${scene.breakdownImg}thumb.jpg" lat="" lng="" heading="">
		<view hlookat="${scene.hlookat}" vlookat="${scene.vlookat}" fovtype="MFOV" fov="120" maxpixelzoom="2.0" fovmin="70" fovmax="140" limitview="auto" />
		<preview url="${scene.breakdownImg!}preview.jpg" />
		${krpano.getSceneImage(scene.breakdownImg)}
		<image if="webvr.isenabled">
			<cube url="${scene.breakdownImg!}vr/pano_%s.jpg" />
		</image>
@[ if(scene.hotSpots!=null && scene.hotSpots.~size>0){ /]
    <!-- 场景热点 -->
    @[ for(hot in scene.hotSpots){
        switch(hot.htype){
            case 0:// 0场景切换
    /]
		    <hotspot name="${hot.hname}" style="skin_hotspotstyle" distorted="true" @[ if(isNotEmpty(hot.depth)){ /]depth="${hot.depth}" @[ } /] @[ if(isNotEmpty(hot.scale)){ /]scale="${hot.scale}" @[ } /] @[ if(isNotEmpty(hot.rotate)){ /]rotate="${hot.rotate}" @[ } /] zoom="false" ath="${hot.ath}" atv="${hot.atv}" linkedscene="${hot.linkedscene}" />
          @[ break;
            case 1://1装饰图片
         /]
		    <hotspot name="${hot.hname}"  @[ if(hot.isOnclick==1){ /] style="flyoutimage" url="${strutil.replace(hot.url,'/n1/','/n3/')}" @[ }else{ /] enabled="false" url="${hot.url}" @[ } /] distorted="true" depth="${hot.depth}" scale="${hot.scale}" ath="${hot.ath}" atv="${hot.atv}" rotate="${hot.rotate}"/>
          @[ break;
            case 2://2外部链接
          /]
            <hotspot name="${hot.hname}" tooltip="${hot.title}" style="showtxt_hotspotstyle" @[ if(is_edit_flag!=1){ /] onclick="js(window.open(${stringEscapeUtils.escapeXml(hot.url)}))" @[ } /] depth="${hot.depth}" scale="${hot.scale}" ath="${hot.ath}" atv="${hot.atv}" rotate="${hot.rotate}" />
          @[ break;
            case 3://3图文介绍 | 内部弹窗页
          /]

          @[ break;
            case 4://4语音热点
          /]

          @[ break;
            case 5://5视频热点
          /]
            <hotspot name="videospot"
	         url.html5="%SWFPATH%/plugins/videoplayer.js"
	         url.flash="%SWFPATH%/plugins/videoplayer.swf"
	         videourl="/video/cats.mp4|/video/cats.webm"
	         posterurl="/video/cats-poster.jpg"
	         distorted="true"
	         ath="0"
	         atv="0"
	         edge="center"
	         scale="1.0"
	         rx="0"
	         ry="0"
	         rz="0"
	         ox="0"
	         oy="0"
	         loop="true"
	         pausedonstart="true"
	         onclick="togglepause();"
	         />
    @[      }
		}
    } /]
	</scene>
@[ } /]

@[ if(isNotEmpty(proj.soundSrc)){ /]
<!-- 全局背景音乐 -->
<plugin name="soundinterface"
        url.flash="%SWFPATH%/plugins/soundinterface.swf"
        url.html5="%SWFPATH%/plugins/soundinterface.js"
        rootpath=""
        preload="true"
        keep="true"
 />
<action name="bgsnd_action" autorun="onstart">
	playsound(bgm, '${proj.soundSrc}', 0);
</action>
@[ } /]
