<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.baseos.dao.daointer.pano.IPanoCommentsDao" >
	<!-- 字段列表 -->
	<sql id="Base_Column_List" >
		t1.id as "id"
		,t1.scene_id as "sceneId"
		,t1.sname as "sname"
		,t1.content as "content"
		,t1.img as "img"
		,t1.ath as "ath"
		,t1.atv as "atv"
		,t1.nickname as "nickname"
		,t1.sex as "sex"
		,t1.province as "province"
		,t1.city as "city"
		,t1.version as "version"
		,t1.state as "state"
		,t1.memo as "memo"
		,t1.order_no as "orderNo"
		,t1.keyword as "keyword"
		,t1.del_flag as "delFlag"
		,t1.invalid_time as "invalidTime"
		,t1.date_created as "dateCreated"
		,t1.create_id as "createId"
		,t1.create_ip as "createIp"
		,t1.date_update as "dateUpdate"
		,t1.update_id as "updateId"
		,t1.update_ip as "updateIp"
	</sql>
	
	<!-- 根据主键获取信息详情 -->
	<select id="selectByPrimaryKey" resultType="panoComments" parameterType="panoComments" >
		select
		<include refid="Base_Column_List" />
		from t_pano_comments t1 
		where  
		t1.id = #{id}
	</select>
	
	<!-- 根据主键物理删除信息 -->
	<delete id="deleteByPrimaryKey" parameterType="panoComments" >
		delete
		from t_pano_comments
		where  
		id = #{id}
	</delete>
	
	<!-- 新增单条数据 -->
	<insert id="insert" parameterType="panoComments" >
		insert into t_pano_comments(
		id
		,scene_id
		,sname
		,content
		,img
		,ath
		,atv
		,nickname
		,sex
		,province
		,city
		,version
		,state
		,memo
		,order_no
		,keyword
		,del_flag
		,invalid_time
		,date_created
		,create_id
		,create_ip
		,date_update
		,update_id
		,update_ip
		) values (
		#{id}
		,#{sceneId}
		,#{sname}
		,#{content}
		,#{img}
		,#{ath}
		,#{atv}
		,#{nickname}
		,#{sex}
		,#{province}
		,#{city}
		,0
		,#{state}
		,#{memo}
		,#{orderNo}
		,#{keyword}
		,'0'
		,#{invalidTime}
		,now()
		,#{createId}
		,#{createIp}
		,#{dateUpdate}
		,#{updateId}
		,#{updateIp}
		)
	</insert>
	
	<!-- 新增 批量数据 -->
	<insert id="insertBatch">
		insert into t_pano_comments(
		id
		,scene_id
		,sname
		,content
		,img
		,ath
		,atv
		,nickname
		,sex
		,province
		,city
		,version
		,state
		,memo
		,order_no
		,keyword
		,del_flag
		,invalid_time
		,date_created
		,create_id
		,create_ip
		,date_update
		,update_id
		,update_ip
		) values 
		<foreach collection="list" item="t" separator=",">
		(
		#{t.id}
		,#{t.sceneId}
		,#{t.sname}
		,#{t.content}
		,#{t.img}
		,#{t.ath}
		,#{t.atv}
		,#{t.nickname}
		,#{t.sex}
		,#{t.province}
		,#{t.city}
		,0
		,#{t.state}
		,#{t.memo}
		,#{t.orderNo}
		,#{t.keyword}
		,'0'
		,#{t.invalidTime}
		,now()
		,#{t.createId}
		,#{t.createIp}
		,#{t.dateUpdate}
		,#{t.updateId}
		,#{t.updateIp}
		)
		</foreach>
	</insert>
	
	<!-- 数据更新 -->
	<update id="updateByPrimaryKeySelective" parameterType="panoComments" >
		update t_pano_comments set 
				 version=version+1
				,date_update=now()
				,update_id=#{updateId}
				,update_ip=#{updateIp}
			<if test="sceneId!= null" >,scene_id=#{sceneId}</if>
			<if test="sname!= null" >,sname=#{sname}</if>
			<if test="content!= null" >,content=#{content}</if>
			<if test="img!= null" >,img=#{img}</if>
			<if test="ath!= null" >,ath=#{ath}</if>
			<if test="atv!= null" >,atv=#{atv}</if>
			<if test="nickname!= null" >,nickname=#{nickname}</if>
			<if test="sex!= null" >,sex=#{sex}</if>
			<if test="province!= null" >,province=#{province}</if>
			<if test="city!= null" >,city=#{city}</if>
			<if test="state!= null" >,state=#{state}</if>
			<if test="memo!= null" >,memo=#{memo}</if>
			<if test="orderNo!= null" >,order_no=#{orderNo}</if>
			<if test="keyword!= null" >,keyword=#{keyword}</if>
			<if test="delFlag!= null" >,del_flag=#{delFlag}</if>
			<if test="invalidTime!= null" >,invalid_time=#{invalidTime}</if>
		where 
			id= #{id}
	</update>
	
	<!-- 判断是否存在 -->
	<select id="isDataYN" parameterType="panoComments" resultType="int">
		select 
			count(0) 
		from t_pano_comments
		where 
			id = #{id}
	</select>
	
	<!--信息列表 分页 -->
	<select id="findDataIsPage" parameterType="panoComments" resultType="panoComments">
		select
		<include refid="Base_Column_List" />
		,t2.scene_title as "sceneTitle"
		,t3.name as "projTitle"
		,t3.id as "projId"
		from t_pano_comments t1 
		left join t_pano_scene t2 on t1.scene_id=t2.id
		left join t_pano_proj t3 on t2.proj_id=t3.id
		where 1=1
		<if test="content!=null and content!=''">
			and t1.content like CONCAT('%',#{content},'%')
		</if>
		<if test="sceneId!=null and sceneId!=''">
			and t1.scene_id=#{sceneId}
		</if>
		<choose>
		 <when test="delFlag!=null">
		     and t1.del_flag=#{delFlag}
		 </when>
		 <otherwise>
		     and t1.del_flag='0'
		 </otherwise>
		</choose> 
		<if test="date1!=null and date1!=''">
			 <![CDATA[ and UNIX_TIMESTAMP(t1.date_created)>=UNIX_TIMESTAMP(#{date1})]]>
		</if>
		<if test="date2!=null and date2!=''">
			 <![CDATA[ and UNIX_TIMESTAMP(t1.date_created)<=UNIX_TIMESTAMP(#{date2})]]>
		</if>
		order by t1.date_created desc
	</select>
	
	<!--信息列表 -->
	<select id="findDataIsList" parameterType="panoComments" resultType="panoComments">
		select
		<include refid="Base_Column_List" />
		from t_pano_comments t1 
		where t1.scene_id=#{sceneId}
		<choose>
		 <when test="delFlag!=null">
		     and t1.del_flag=#{delFlag}
		 </when>
		 <otherwise>
		     and t1.del_flag='0'
		 </otherwise>
		</choose>
		<if test="date1!=null and date1!=''">
			 <![CDATA[ and UNIX_TIMESTAMP(t1.date_created)>=UNIX_TIMESTAMP(#{date1})]]>
		</if>
		<if test="date2!=null and date2!=''">
			 <![CDATA[ and UNIX_TIMESTAMP(t1.date_created)<=UNIX_TIMESTAMP(#{date2})]]>
		</if>
	</select>
	
	<!-- 逻辑删除-->
	<update id="deleteById" parameterType="panoComments" >
		update t_pano_comments set 
			version=version+1
			,update_id=#{updateId}
			,update_ip=#{updateIp}
			,del_flag='1'
		where  
			id = #{id}
	</update>
	
	<!-- 恢复逻辑删除 -->
	<update id="recoveryDataById" parameterType="panoComments" >
		update t_pano_comments set 
			version=version+1
			,update_id=#{updateId}
			,update_ip=#{updateIp}
			,del_flag='0'
		where  
			id = #{id}
	</update>
</mapper>