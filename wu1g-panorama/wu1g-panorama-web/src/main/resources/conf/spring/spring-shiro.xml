<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd">
	<description>Shiro安全配置 来源于： http://shiro.apache.org/spring.html</description>
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!-- Single realm app. If you have multiple realms, use the 'realms' property instead. -->
		<property name="cacheManager" ref="shiroEhcacheManager" />
		<property name="realm" ref="myShiroRealm" />
	</bean>
	<!-- 項目自定义的Realm -->
	<!-- MyRealm类是本权限系统的核心类。用户的登录认证和授权验证将由该类完成． MyRealm类继承了Shiro的AuthorizingRealm类， 并重写了doGetAuthenticationInfo和doGetAuthorizationInfo方法 -->
	<bean id="myShiroRealm" class="cn.com.baseos.web.MyShiroRealm">
		<!-- 可配置cache token<->认证信息的cache，用于REST等需要频繁认证的场景 -->
		<property name="authorizationCachingEnabled" value="true" />
	</bean>

	<!-- Define the realm you want to use to connect to your back-end security datasource: -->

	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/admin/init" /> <!-- 没有权限或者失败后跳转的页面 -->
		<property name="successUrl" value="/h/index" />
		<property name="unauthorizedUrl" value="/error/noauth" />
		<property name="filterChainDefinitions">
			<!-- , roles[admin], perms[document:read] -->
			<value>
				/error/noauth=anon
				/admin/init=anon
				/admin/login=anon
				/admin/logout=anon
				/h/**=authc
			</value>
		</property>
	</bean>

	<!-- 用户授权/认证信息Cache, 采用EhCache 缓存 -->
	<bean id="shiroEhcacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:conf/ehcache-shiro.xml" />
	</bean>
	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<!-- AOP式方法级权限检查 -->
	<!-- Enable Shiro Annotations for Spring-configured beans. Only run after -->
	<!-- the lifecycleBeanProcessor has run: -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
</beans>
