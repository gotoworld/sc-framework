<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hsd.account.actor.dao.identity.IIdentityDao">
    <!-- 字段列表 -->
    <sql id="Base_Column_List">
         t1.user_id as "userId"
        ,t1.real_name as "realName"
        ,t1.credential_type as "credentialType"
        ,t1.credential_number as "credentialNumber"
        ,t1.credential_photo_a as "credentialPhotoA"
        ,t1.credential_photo_b as "credentialPhotoB"
        ,t1.state as "state"
        ,t1.memo as "memo"
        ,t1.version as "version"
        ,t1.keyword as "keyword"
        ,t1.create_id as "createId"
        ,t1.date_created as "dateCreated"
        ,t1.date_updated as "dateUpdated"
    </sql>

    <!-- 根据主键获取信息详情 -->
    <select id="selectByPrimaryKey" resultType="com.hsd.account.actor.entity.identity.Identity" parameterType="com.hsd.account.actor.entity.identity.Identity">
        select
        <include refid="Base_Column_List"/>
        from identity t1
        where
        t1.user_id = #{userId}
    </select>

    <!-- 新增单条数据 -->
    <insert id="insert" parameterType="com.hsd.account.actor.entity.identity.Identity"  useGeneratedKeys="true" keyProperty="userId"  >
        insert into identity (
         
            real_name 
           ,credential_type 
           ,credential_number 
           ,credential_photo_a 
           ,credential_photo_b 
           ,state 
           ,memo 
           ,version 
           ,keyword 
           ,create_id 
           ,date_created 
           ,date_updated 
        ) values (
         
            #{realName} 
           ,#{credentialType} 
           ,#{credentialNumber} 
           ,#{credentialPhotoA} 
           ,#{credentialPhotoB} 
           ,#{state} 
           ,#{memo} 
           ,0
           ,#{keyword} 
           ,#{createId} 
           ,now()
           ,now()
        )
    </insert>


    <!-- 数据更新 -->
    <update id="update" parameterType="com.hsd.account.actor.entity.identity.Identity">
        update identity set date_updated=now() ,version=version+1
             <if test="realName!=null">,real_name = #{realName}</if>
             <if test="credentialType!=null">,credential_type = #{credentialType}</if>
             <if test="credentialNumber!=null">,credential_number = #{credentialNumber}</if>
             <if test="credentialPhotoA!=null">,credential_photo_a = #{credentialPhotoA}</if>
             <if test="credentialPhotoB!=null">,credential_photo_b = #{credentialPhotoB}</if>
             <if test="state!=null">,state = #{state}</if>
             <if test="memo!=null">,memo = #{memo}</if>
             <if test="keyword!=null">,keyword = #{keyword}</if>

        where
        user_id = #{userId}
    </update>

    <!--列表通用条件-->
    <sql id="list_where_sql">
        and t1.user_id = #{userId}
        <if test="dateBegin!=null and dateBegin!=''">
            <![CDATA[ and DATE_FORMAT(t1.date_created,'%Y-%m-%d')>=DATE_FORMAT(#{dateBegin},'%Y-%m-%d') ]]>
        </if>
        <if test="dateEnd!=null and dateEnd!=''">
            <![CDATA[ and DATE_FORMAT(t1.date_created,'%Y-%m-%d')<=DATE_FORMAT(#{dateEnd},'%Y-%m-%d') ]]>
        </if>
    </sql>

    <!--信息分页 -->
    <select id="findDataIsPage" parameterType="com.hsd.account.actor.entity.identity.Identity" resultType="com.hsd.account.actor.entity.identity.Identity">
        select
        <include refid="Base_Column_List"/>
        from identity t1
        where 1=1
        <include refid="list_where_sql"/>
        order by t1.date_created desc
    </select>

    <!--信息列表 -->
    <select id="findDataIsList" parameterType="com.hsd.account.actor.entity.identity.Identity" resultType="com.hsd.account.actor.entity.identity.Identity">
        select
        <include refid="Base_Column_List"/>
        from identity t1
        where 1=1
        <include refid="list_where_sql"/>
        order by t1.date_created desc
    </select>
</mapper>