package ${scfg._biz_pkg};

import ${scfg._api_pkg}.I${tcfg.tableNameFormat!}Service;
import ${scfg._dao_pkg}.I${tcfg.tableNameFormat!}${scfg._dao_suffix!};
import ${scfg._domain_pkg}.${tcfg.tableNameFormat!};
import ${scfg._dto_pkg}.${tcfg.tableNameFormat!}Dto;
import com.cddang.common.constant.PortalConstant;
import com.github.pagehelper.PageHelper;
import com.github.pagehelper.PageInfo;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Isolation;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

@Service
@Slf4j
public class ${tcfg.tableNameFormat!}Service extends BaseService implements I${tcfg.tableNameFormat!}Service {
    @Autowired
    private I${tcfg.tableNameFormat!}${scfg._dao_suffix!} ${tableNameL}${scfg._dao_suffix!};

    <%if ("1"==scfg._insert||"1"==scfg._update) {%>
    @Override
    @Transactional(propagation = Propagation.REQUIRED, isolation = Isolation.DEFAULT, timeout = PortalConstant.DB_DEFAULT_TIMEOUT, rollbackFor = {Exception.class, RuntimeException.class})
    public String saveOrUpdateData(${tcfg.tableNameFormat!}Dto dto) throws Exception {
        String msg = "seccuss";
        if (dto != null) {
            try {
                ${tcfg.tableNameFormat!} entity = copyTo(dto, ${tcfg.tableNameFormat!}.class);
                //判断数据是否存在
                if (${tableNameL}${scfg._dao_suffix!}.isDataYN(entity) != 0) {
                    //数据存在
                    <%if ("1"==scfg._update){%>${tableNameL}${scfg._dao_suffix!}.update(entity);<%}%>
                } else {
                    //新增
                     <%if ("1"==scfg._insert){%>${tableNameL}${scfg._dao_suffix!}.insert(entity);<%}%>
                     dto.setId(entity.getId());
                }
            } catch (Exception e) {
                log.error("信息保存异常!", e);
                throw new Exception("信息保存异常!");
            }
        }
        return msg;
    }
    <%}%>

    <%if ("1"==scfg._del) {%>
    @Override
    public String deleteData(${tcfg.tableNameFormat!}Dto dto) throws Exception {
        String msg = "seccuss";
        if (dto != null) {
            try {
                ${tcfg.tableNameFormat!} entity = copyTo(dto, ${tcfg.tableNameFormat!}.class);
                if(${tableNameL}${scfg._dao_suffix!}.deleteByPrimaryKey(entity)==0){
					throw new RuntimeException("数据不存在!");
                }
            } catch (Exception e) {
                log.error("物理删除异常!", e);
                throw new Exception(e.getMessage());
            }
        }
        return msg;
    }
    <%}%>

    <%if ("1"==scfg._delLogic && null!=scfg._col_del) {%>
    @Override
    @Transactional(propagation = Propagation.REQUIRED, isolation = Isolation.DEFAULT, timeout = PortalConstant.DB_DEFAULT_TIMEOUT, rollbackFor = {Exception.class, RuntimeException.class})
    public String deleteDataById(${tcfg.tableNameFormat!}Dto dto) throws Exception {
        String msg = "seccuss";
        if (dto != null) {
            try {
                ${tcfg.tableNameFormat!} entity = copyTo(dto, ${tcfg.tableNameFormat!}.class);
                if(${tableNameL}${scfg._dao_suffix!}.deleteById(entity)==0){
					throw new RuntimeException("数据不存在!");
                }
            } catch (Exception e) {
                log.error("逻辑删除异常!", e);
                throw new Exception(e.getMessage());
            }
        }
        return msg;
    }
    <%}%>

    <%if ("1"==scfg._page) {%>
    @Override
    public PageInfo findDataIsPage(${tcfg.tableNameFormat!}Dto dto) throws Exception {
       PageInfo pageInfo=null;
       try {
           ${tcfg.tableNameFormat!} entity = copyTo(dto, ${tcfg.tableNameFormat!}.class);
           PageHelper.startPage(PN(dto.getPageIndex()), PS(dto.getPageSize()));
           List list = ${tableNameL}${scfg._dao_suffix!}.findDataIsPage(entity);
           pageInfo=new PageInfo(list);
           pageInfo.setList(copyTo(pageInfo.getList(), ${tcfg.tableNameFormat!}Dto.class));
       } catch (Exception e) {
           log.error("信息查询异常!", e);
           throw new RuntimeException("信息查询异常!");
       }
       return pageInfo;
    }
    <%}%>

    <%if ("1"==scfg._list) {%>
    @Override
    public List<${tcfg.tableNameFormat!}Dto> findDataIsList(${tcfg.tableNameFormat!}Dto dto) throws Exception {
        List<${tcfg.tableNameFormat!}Dto> dtos = null;
        try {
            ${tcfg.tableNameFormat!} entity = copyTo(dto, ${tcfg.tableNameFormat!}.class);
            dtos = copyTo(${tableNameL}${scfg._dao_suffix!}.findDataIsList(entity), ${tcfg.tableNameFormat!}Dto.class);
        } catch (Exception e) {
            log.error("信息查询异常!", e);
            throw new Exception("信息查询异常!");
        }
        return dtos;
    }
     <%}%>

    <%if ("1"==scfg._detail) {%>
    @Override
    public ${tcfg.tableNameFormat!}Dto findDataById(${tcfg.tableNameFormat!}Dto dto) throws Exception {
        ${tcfg.tableNameFormat!}Dto dto1 = null;
        try {
            ${tcfg.tableNameFormat!} entity = copyTo(dto, ${tcfg.tableNameFormat!}.class);
            dto1 = copyTo(${tableNameL}${scfg._dao_suffix!}.selectByPrimaryKey(entity),${tcfg.tableNameFormat!}Dto.class);
        } catch (Exception e) {
            log.error("信息查询异常!", e);
            throw new Exception("信息查询异常!");
        }
        return dto1;
    }
    <%}%>

     <%if ("1"==scfg._recovery && null!=scfg._col_del) {%>
    @Override
    public String recoveryDataById(${tcfg.tableNameFormat!}Dto dto) throws Exception {
        String msg = "seccuss";
        if (dto != null) {
            try {
                ${tcfg.tableNameFormat!} entity = copyTo(entity, ${tcfg.tableNameFormat!}.class);
                if(${tableNameL}${scfg._dao_suffix!}.recoveryDataById(entity)==0){
					throw new RuntimeException("数据不存在!");
                }
            } catch (Exception e) {
                log.error("数据恢复异常!", e);
                throw new Exception(e.getMessage());
            }
        }
        return msg;
    }
    <%}%>
}