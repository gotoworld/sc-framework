<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wu1g.dao.pano.IPanoCommentsDao">
    <!-- 字段列表 -->
    <sql id="Base_Column_List">
		 t1.id as  "id"
		,t1.scene_id as  "sceneId"
		,t1.content as  "content"
		,t1.ath as  "ath"
		,t1.atv as  "atv"
		,t1.avatar as  "avatar"
		,t1.nickname as  "nickname"
		,t1.sex as  "sex"
		,t1.province as  "province"
		,t1.city as  "city"
		,t1.memo as  "memo"
		,t1.del_flag as  "delFlag"
		,t1.date_created as  "dateCreated"
		,t1.date_updated as  "dateUpdated"
	</sql>

    <!-- 根据主键获取信息详情 -->
    <select id="selectByPrimaryKey" resultType="panoComments" parameterType="panoComments">
        select
        <include refid="Base_Column_List"/>
        from pano_comments t1
        where
        t1.id = #{id}
    </select>

    <!-- 根据主键物理删除信息 -->
    <delete id="deleteByPrimaryKey" parameterType="panoComments">
		delete
		from pano_comments
		where  
		id = #{id}
	</delete>

    <!-- 新增单条数据 -->
    <insert id="insert" parameterType="panoComments" useGeneratedKeys="true" keyProperty="id">
		insert into pano_comments(
			 scene_id
			,content
			,ath
			,atv
			,avatar
			,nickname
			,sex
			,province
			,city
			,memo
			,del_flag
			,date_created
			,date_updated
		) values (
			 #{sceneId}
			,#{content}
			,#{ath}
			,#{atv}
			,#{avatar}
			,#{nickname}
			,#{sex}
			,#{province}
			,#{city}
			,#{memo}
			,0
			,now()
			,now()
		)
	</insert>

    <!-- 数据更新 -->
    <update id="update" parameterType="panoComments">
        update pano_comments set
        version=version+1
        ,date_updated=now()
		<if test="sceneId!= null" >,scene_id=#{sceneId}</if>
		<if test="content!= null" >,content=#{content}</if>
		<if test="ath!= null" >,ath=#{ath}</if>
		<if test="atv!= null" >,atv=#{atv}</if>
		<if test="avatar!= null" >,avatar=#{avatar}</if>
		<if test="nickname!= null" >,nickname=#{nickname}</if>
		<if test="sex!= null" >,sex=#{sex}</if>
		<if test="province!= null" >,province=#{province}</if>
		<if test="city!= null" >,city=#{city}</if>
		<if test="memo!= null" >,memo=#{memo}</if>
		where
        id= #{id}
    </update>

    <!-- 判断是否存在 -->
    <select id="isDataYN" parameterType="panoComments" resultType="int">
		select 
			count(0) 
		from pano_comments
		where 
			id = #{id}
	</select>
    <!--列表通用条件-->
    <sql id="list_where_sql">
        <choose>
            <when test="delFlag!=null">
                and t1.del_flag=#{delFlag}
            </when>
            <otherwise>
                and t1.del_flag=0
            </otherwise>
        </choose>
        <if test="content!=null and content!=''">
            and t1.content like CONCAT('%',#{content},'%')
        </if>
        <if test="sceneId!=null and sceneId!=''">
            and t1.scene_id=#{sceneId}
        </if>
        <if test="dateBegin!=null and dateBegin!=''">
            <![CDATA[ and DATE_FORMAT(t1.date_created,'%Y-%m-%d')>=DATE_FORMAT(#{dateBegin},'%Y-%m-%d')]]>
        </if>
        <if test="dateEnd!=null and dateEnd!=''">
            <![CDATA[ and DATE_FORMAT(t1.date_created,'%Y-%m-%d')<=DATE_FORMAT(#{dateEnd},'%Y-%m-%d')]]>
        </if>
    </sql>
    <!--信息列表 分页 -->
    <select id="findDataIsPage" parameterType="panoComments" resultType="panoComments">
        select
        <include refid="Base_Column_List"/>
        ,t2.scene_title as "sceneTitle"
        ,t3.name as "projTitle"
        ,t3.id as "projId"
        from pano_comments t1
        left join pano_scene t2 on t1.scene_id=t2.id
        left join pano_proj t3 on t2.proj_id=t3.id
        where 1=1
        <include refid="list_where_sql"/>
        order by t1.date_created desc
    </select>

    <!--信息列表 -->
    <select id="findDataIsList" parameterType="panoComments" resultType="panoComments">
        select
        <include refid="Base_Column_List"/>
        from pano_comments t1
        where t1.scene_id=#{sceneId}
        <include refid="list_where_sql"/>
    </select>

    <!-- 逻辑删除-->
    <update id="deleteById" parameterType="panoComments">
		update pano_comments set
			version=version+1,date_updated=now()
			,del_flag=1
		where  
			id = #{id}
	</update>

    <!-- 恢复逻辑删除 -->
    <update id="recoveryDataById" parameterType="panoComments">
		update pano_comments set
			version=version+1,date_updated=now()
			,del_flag=0
		where  
			id = #{id}
	</update>
</mapper>