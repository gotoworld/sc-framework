<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hsd.account.actor.dao.user.IUserDao">
    <!-- 字段列表 -->
    <sql id="Base_Column_List">
         t1.id as "id"
        ,t1.account as "account"
        ,t1.name as "name"
        ,t1.email as "email"
        ,t1.gender as "gender"
        ,t1.cellphone as "cellphone"
        ,t1.type as "type"
        ,t1.state as "state"
        ,t1.register_channel as "registerChannel"
        ,t1.tags as "tags"
        ,t1.date_created as "dateCreated"
        ,t1.last_login as "lastLogin"
        ,t1.count as "count"
    </sql>

    <!-- 根据主键获取信息详情 -->
    <select id="selectByPrimaryKey" resultType="com.hsd.account.actor.entity.user.User" parameterType="com.hsd.account.actor.entity.user.User">
        select
        <include refid="Base_Column_List"/>
        from user t1
        where
        t1.id = #{id}
    </select>

    <!-- 新增单条数据 -->
    <insert id="insert" parameterType="com.hsd.account.actor.entity.user.User"  useGeneratedKeys="true" keyProperty="id"  >
        insert into user (
            id
           ,account
           ,name
           ,pwd
           ,trade_pwd
           ,email 
           ,gender 
           ,cellphone 
           ,type 
           ,state 
           ,register_channel 
           ,tags 
           ,date_created
           ,version
        ) values (
            #{id}
           ,#{account}
           ,#{name}
           ,#{pwd}
           ,#{tradePwd} 
           ,#{email} 
           ,#{gender} 
           ,#{cellphone} 
           ,#{type} 
           ,#{state} 
           ,#{registerChannel} 
           ,#{tags} 
           ,now()
           ,0
        )
    </insert>


    <!-- 数据更新 -->
    <update id="update" parameterType="com.hsd.account.actor.entity.user.User">
        update user set  version=version+1
             <if test="name!=null">,name = #{name}</if>
             <if test="email!=null">,email = #{email}</if>
             <if test="gender!=null">,gender = #{gender}</if>
             <if test="cellphone!=null">,cellphone = #{cellphone}</if>
             <if test="type!=null">,type = #{type}</if>
             <if test="state!=null">,state = #{state}</if>
             <if test="registerChannel!=null">,register_channel = #{registerChannel}</if>
             <if test="tags!=null">,tags = #{tags}</if>
        where
        id = #{id}
    </update>

    <!--列表通用条件-->
    <sql id="list_where_sql">
        <if test="registerChannel!=null and registerChannel!=''">and t1.register_channel = #{registerChannel}</if>
        <if test="gender!=null">and t1.gender = #{gender}</if>
        <if test="type!=null">and t1.type = #{type}</if>
        <if test="state!=null">and t1.state = #{state}</if>
        <if test="keyword!=null and keyword!=''">
            and t1.name like concat('%',#{keyword},'%')
        </if>
        <if test="dateBegin!=null and dateBegin!=''">
            <![CDATA[ and DATE_FORMAT(t1.date_created,'%Y-%m-%d')>=DATE_FORMAT(#{dateBegin},'%Y-%m-%d') ]]>
        </if>
        <if test="dateEnd!=null and dateEnd!=''">
            <![CDATA[ and DATE_FORMAT(t1.date_created,'%Y-%m-%d')<=DATE_FORMAT(#{dateEnd},'%Y-%m-%d') ]]>
        </if>
    </sql>

    <!--信息分页 -->
    <select id="findDataIsPage" parameterType="com.hsd.account.actor.entity.user.User" resultType="com.hsd.account.actor.entity.user.User">
        select
        <include refid="Base_Column_List"/>
        from user t1
        where 1=1
        <include refid="list_where_sql"/>
        order by t1.id desc
    </select>

    <!--信息列表 -->
    <select id="findDataIsList" parameterType="com.hsd.account.actor.entity.user.User" resultType="com.hsd.account.actor.entity.user.User">
        select
        <include refid="Base_Column_List"/>
        from user t1
        where 1=1
        <include refid="list_where_sql"/>
        order by t1.id desc
    </select>


    <!-- 获取客户信息>根据客户登录名 -->
    <select id="findUserByAccount" parameterType="map" resultType="com.hsd.account.actor.entity.user.User">
        select
        <include refid="Base_Column_List"/>
        ,t1.pwd as "pwd"
        ,t1.trade_pwd as "tradePwd"
        from user t1
        where  t1.state=1 and t1.type=#{userType}
        and t1.account=#{account}
    </select>
    <select id="getAccount" parameterType="com.hsd.account.actor.entity.user.User" resultType="com.hsd.account.actor.entity.user.User">
        select
         t1.id as "id"
        ,t1.account as "account"
        ,t1.name as "name"
        ,t1.email as "email"
        ,t1.cellphone as "cellphone"
        from user t1
        where  t1.state=1 and t1.type=#{type}
        and (t1.account=#{account} or t1.email=#{account} or t1.cellphone=#{account})
    </select>

</mapper>