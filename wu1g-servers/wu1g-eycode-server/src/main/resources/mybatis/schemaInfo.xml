<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wu1g.dao.ISchemaInfoDao">
    <select id="findDbIsList" parameterType="schemaInfo" resultType="schemaInfo">
		select SCHEMA_NAME as dbName,DEFAULT_CHARACTER_SET_NAME as dbCharset from information_schema.SCHEMATA
	</select>
    <select id="findTableIsList" parameterType="schemaInfo" resultType="schemaInfo">
		select
		TABLE_SCHEMA as dbName,
		TABLE_NAME as tableName,
		TABLE_COMMENT as tableComment
		from information_schema.`TABLES`
		<if test="dbs!=null">
			where TABLE_SCHEMA in (
				<foreach collection="dbs" item="t" separator=",">
					#{t}
				</foreach>
			)
		</if>
	</select>
    <select id="findColumnIsList" parameterType="schemaInfo" resultType="schemaInfo">
		SELECT
		TABLE_SCHEMA AS dbName,
		TABLE_NAME AS tableName,
		COLUMN_NAME AS columnName,
		COLUMN_COMMENT AS columnComment,
		COLUMN_DEFAULT AS columnDefault,
		IS_NULLABLE AS isNullable,
		DATA_TYPE AS dataType,
		CHARACTER_MAXIMUM_LENGTH AS dataLength,
		COLUMN_KEY AS pk,
		EXTRA AS autoIncrement
		FROM
		information_schema.`COLUMNS`
		WHERE 1=1
		<if test="dbs!=null">
			AND TABLE_SCHEMA IN (
			<foreach collection="dbs" item="t" separator=",">
				#{t}
			</foreach>
			)
		</if>
		<if test="tables!=null">
			AND	TABLE_NAME IN (
			<foreach collection="tables" item="t" separator=",">
				#{t}
			</foreach>
			)
		</if>
	</select>
    <select id="findColumnIsList2" parameterType="map" resultType="schemaInfo">
		<![CDATA[
		SELECT
		TABLE_SCHEMA AS dbName,
		TABLE_NAME AS tableName,
		COLUMN_NAME AS columnName,
		COLUMN_COMMENT AS columnComment,
		COLUMN_DEFAULT AS columnDefault,
		IS_NULLABLE AS isNullable,
		DATA_TYPE AS dataType,
		CHARACTER_MAXIMUM_LENGTH AS dataLength,
		COLUMN_KEY AS pk,
		EXTRA AS autoIncrement
		FROM
		information_schema.`COLUMNS`
		WHERE TABLE_SCHEMA = #{db} AND TABLE_NAME = #{table}  and t.COLUMN_NAME not in ('del_flag','date_created','create_id')
		]]>
	</select>
    <select id="findColumnPks" parameterType="map" resultType="schemaInfo">
		<![CDATA[
		SELECT
		TABLE_SCHEMA AS dbName,
		TABLE_NAME AS tableName,
		COLUMN_NAME AS columnName,
		COLUMN_COMMENT AS columnComment,
		COLUMN_DEFAULT AS columnDefault,
		IS_NULLABLE AS isNullable,
		DATA_TYPE AS dataType,
		CHARACTER_MAXIMUM_LENGTH AS dataLength,
		COLUMN_KEY AS pk,
		EXTRA AS autoIncrement
		FROM
		information_schema.`COLUMNS`
		WHERE TABLE_SCHEMA = #{db} AND TABLE_NAME = #{table} and COLUMN_KEY ='PRI'
		]]>
	</select>

	<select id="findSpringVO" parameterType="map" resultType="map">
		<![CDATA[
		select
		CONCAT('/**',t.comment,'*/') as comment
		,
		CONCAT(
		CASE
		WHEN t.DATA_TYPE  in ('date' , 'time' , 'datetime' , 'timestamp' , 'year')  THEN ''
		when t.DATA_TYPE in ('tinyint','smallint','mediumint','int','bigint') then ''
		when t.DATA_TYPE in ('float','double') then ''
		when t.DATA_TYPE in ('decimal') then ''
		else
		CASE
		when t.code!='id' and  t.isNull='NO' then
		CONCAT('@NotNull(message="',t.code,'不能为空")',
		''
		)
		else ''
		end
		end,
		case
		when IFNULL(t.len,0)>0 then CONCAT('@Size(max=',t.len,',message="',t.code,'最大',t.len,'字符")')
		else ''
		end
		) as JSR303
		,
		CONCAT(
		'private ',
		(
		CASE
		WHEN t.DATA_TYPE  in ('date' , 'time' , 'datetime' , 'timestamp' , 'year')  THEN 'Date'
		when (t.DATA_TYPE in ('tinyint') or t.code in ('delFlag'))then 'Integer'
		when t.DATA_TYPE in ('bigint') then 'Long'
		when t.DATA_TYPE in ('smallint','mediumint','int') then 'Integer'
		when t.DATA_TYPE in ('float','double') then 'Double'
		when t.DATA_TYPE in ('decimal') then 'BigDecimal'
		else
		'String'
		end),
		' ',
		t.code
		,';'
		) as propertyField
		FROM ( SELECT t.PK,CONCAT(  IF ( position('_' IN t. CODE) = 0, SUBSTR( t. CODE, 1, CHAR_LENGTH(t. CODE) ), SUBSTR( t. CODE, 1, position('_' IN t. CODE) - 1 ) ),  IF ( position('_' IN t. CODE) != 0, UPPER( SUBSTR( t. CODE, position('_' IN t. CODE) + 1, 1 ) ), '' ),  IF ( position('_' IN t. CODE) != 0, SUBSTR( t. CODE, position('_' IN t. CODE) + 2, CHAR_LENGTH(t. CODE) ), '' ) ) AS CODE, t. COMMENT, t.DATA_TYPE AS DATA_TYPE, t.isNull AS isNull, t.len AS len, t.columnName AS columnName
			FROM ( SELECT t.PK,CONCAT(  IF ( position('_' IN t. CODE) = 0, SUBSTR( t. CODE, 1, CHAR_LENGTH(t. CODE) ), SUBSTR( t. CODE, 1, position('_' IN t. CODE) - 1 ) ),  IF ( position('_' IN t. CODE) != 0, UPPER( SUBSTR( t. CODE, position('_' IN t. CODE) + 1, 1 ) ), '' ),  IF ( position('_' IN t. CODE) != 0, SUBSTR( t. CODE, position('_' IN t. CODE) + 2, CHAR_LENGTH(t. CODE) ), '' ) ) AS CODE, t. COMMENT, t.DATA_TYPE AS DATA_TYPE, t.isNull AS isNull, t.len AS len, t.columnName AS columnName
				FROM ( SELECT t.PK,CONCAT(  IF ( position('_' IN t. CODE) = 0, SUBSTR( t. CODE, 1, CHAR_LENGTH(t. CODE) ), SUBSTR( t. CODE, 1, position('_' IN t. CODE) - 1 ) ),  IF ( position('_' IN t. CODE) != 0, UPPER( SUBSTR( t. CODE, position('_' IN t. CODE) + 1, 1 ) ), '' ),  IF ( position('_' IN t. CODE) != 0, SUBSTR( t. CODE, position('_' IN t. CODE) + 2, CHAR_LENGTH(t. CODE) ), '' ) ) AS CODE, t. COMMENT, t.DATA_TYPE AS DATA_TYPE, t.isNull AS isNull, t.len AS len, t.columnName AS columnName
					FROM (
						SELECT if(t.COLUMN_KEY='PRI',1,0) as PK,CONCAT( SUBSTR(t.COLUMN_NAME, 1, 1),  IF ( position('_' IN t.COLUMN_NAME) = 0, SUBSTR( t.COLUMN_NAME, 2, CHAR_LENGTH(t.COLUMN_NAME) ), SUBSTR( t.COLUMN_NAME, 2, position('_' IN t.COLUMN_NAME) - 2 ) ),  IF ( position('_' IN t.COLUMN_NAME) != 0, UPPER( SUBSTR( t.COLUMN_NAME, position('_' IN t.COLUMN_NAME) + 1, 1 ) ), '' ),  IF ( position('_' IN t.COLUMN_NAME) != 0, SUBSTR( t.COLUMN_NAME, position('_' IN t.COLUMN_NAME) + 2, CHAR_LENGTH(t.COLUMN_NAME) ), '' ) ) AS CODE, t.COLUMN_COMMENT AS COMMENT, t.DATA_TYPE AS DATA_TYPE, t.IS_NULLABLE AS isNull, t.CHARACTER_MAXIMUM_LENGTH AS len, t.COLUMN_NAME AS columnName
						FROM information_schema.`COLUMNS` t
						WHERE t.TABLE_SCHEMA = #{db} AND t.TABLE_NAME = #{table}
					) t
				) t
			) t
		) t
		]]>
	</select>

	<select id="findMybatisSelect" parameterType="map" resultType="map">
		<![CDATA[
		select
		CONCAT('t1.',t.columnName,	' as "',	t.code	,'"') as mybatisEl
		FROM ( SELECT t.PK,CONCAT(  IF ( position('_' IN t. CODE) = 0, SUBSTR( t. CODE, 1, CHAR_LENGTH(t. CODE) ), SUBSTR( t. CODE, 1, position('_' IN t. CODE) - 1 ) ),  IF ( position('_' IN t. CODE) != 0, UPPER( SUBSTR( t. CODE, position('_' IN t. CODE) + 1, 1 ) ), '' ),  IF ( position('_' IN t. CODE) != 0, SUBSTR( t. CODE, position('_' IN t. CODE) + 2, CHAR_LENGTH(t. CODE) ), '' ) ) AS CODE, t. COMMENT, t.DATA_TYPE AS DATA_TYPE, t.isNull AS isNull, t.len AS len, t.columnName AS columnName
			FROM ( SELECT t.PK,CONCAT(  IF ( position('_' IN t. CODE) = 0, SUBSTR( t. CODE, 1, CHAR_LENGTH(t. CODE) ), SUBSTR( t. CODE, 1, position('_' IN t. CODE) - 1 ) ),  IF ( position('_' IN t. CODE) != 0, UPPER( SUBSTR( t. CODE, position('_' IN t. CODE) + 1, 1 ) ), '' ),  IF ( position('_' IN t. CODE) != 0, SUBSTR( t. CODE, position('_' IN t. CODE) + 2, CHAR_LENGTH(t. CODE) ), '' ) ) AS CODE, t. COMMENT, t.DATA_TYPE AS DATA_TYPE, t.isNull AS isNull, t.len AS len, t.columnName AS columnName
				FROM ( SELECT t.PK,CONCAT(  IF ( position('_' IN t. CODE) = 0, SUBSTR( t. CODE, 1, CHAR_LENGTH(t. CODE) ), SUBSTR( t. CODE, 1, position('_' IN t. CODE) - 1 ) ),  IF ( position('_' IN t. CODE) != 0, UPPER( SUBSTR( t. CODE, position('_' IN t. CODE) + 1, 1 ) ), '' ),  IF ( position('_' IN t. CODE) != 0, SUBSTR( t. CODE, position('_' IN t. CODE) + 2, CHAR_LENGTH(t. CODE) ), '' ) ) AS CODE, t. COMMENT, t.DATA_TYPE AS DATA_TYPE, t.isNull AS isNull, t.len AS len, t.columnName AS columnName
					FROM (
					SELECT if(t.COLUMN_KEY='PRI',1,0) as PK,CONCAT( SUBSTR(t.COLUMN_NAME, 1, 1),  IF ( position('_' IN t.COLUMN_NAME) = 0, SUBSTR( t.COLUMN_NAME, 2, CHAR_LENGTH(t.COLUMN_NAME) ), SUBSTR( t.COLUMN_NAME, 2, position('_' IN t.COLUMN_NAME) - 2 ) ),  IF ( position('_' IN t.COLUMN_NAME) != 0, UPPER( SUBSTR( t.COLUMN_NAME, position('_' IN t.COLUMN_NAME) + 1, 1 ) ), '' ),  IF ( position('_' IN t.COLUMN_NAME) != 0, SUBSTR( t.COLUMN_NAME, position('_' IN t.COLUMN_NAME) + 2, CHAR_LENGTH(t.COLUMN_NAME) ), '' ) ) AS CODE, t.COLUMN_COMMENT AS COMMENT, t.DATA_TYPE AS DATA_TYPE, t.IS_NULLABLE AS isNull, t.CHARACTER_MAXIMUM_LENGTH AS len, t.COLUMN_NAME AS columnName
					FROM information_schema.`COLUMNS` t
					WHERE t.TABLE_SCHEMA = #{db} AND t.TABLE_NAME = #{table}
					) t
				) t
			) t
		) t
		]]>
	</select>
	<select id="findMybatisUpdate" parameterType="map" resultType="map">
		<![CDATA[
		select
		case
		when t.code in ('version') then 'version=version+1'
		when t.code in ('delFlag','dateCreated','createId') then ''
		when t.code in ('dateUpdated') then CONCAT(',',t.columnName,'=now()')
		else
		CONCAT('<if test="',t.code,'!= null" >,',t.columnName,'={',t.code,'}</if>')
		end as mybatisUpdateXml
		FROM ( SELECT t.PK,CONCAT(  IF ( position('_' IN t. CODE) = 0, SUBSTR( t. CODE, 1, CHAR_LENGTH(t. CODE) ), SUBSTR( t. CODE, 1, position('_' IN t. CODE) - 1 ) ),  IF ( position('_' IN t. CODE) != 0, UPPER( SUBSTR( t. CODE, position('_' IN t. CODE) + 1, 1 ) ), '' ),  IF ( position('_' IN t. CODE) != 0, SUBSTR( t. CODE, position('_' IN t. CODE) + 2, CHAR_LENGTH(t. CODE) ), '' ) ) AS CODE, t. COMMENT, t.DATA_TYPE AS DATA_TYPE, t.isNull AS isNull, t.len AS len, t.columnName AS columnName
			FROM ( SELECT t.PK,CONCAT(  IF ( position('_' IN t. CODE) = 0, SUBSTR( t. CODE, 1, CHAR_LENGTH(t. CODE) ), SUBSTR( t. CODE, 1, position('_' IN t. CODE) - 1 ) ),  IF ( position('_' IN t. CODE) != 0, UPPER( SUBSTR( t. CODE, position('_' IN t. CODE) + 1, 1 ) ), '' ),  IF ( position('_' IN t. CODE) != 0, SUBSTR( t. CODE, position('_' IN t. CODE) + 2, CHAR_LENGTH(t. CODE) ), '' ) ) AS CODE, t. COMMENT, t.DATA_TYPE AS DATA_TYPE, t.isNull AS isNull, t.len AS len, t.columnName AS columnName
				FROM ( SELECT t.PK,CONCAT(  IF ( position('_' IN t. CODE) = 0, SUBSTR( t. CODE, 1, CHAR_LENGTH(t. CODE) ), SUBSTR( t. CODE, 1, position('_' IN t. CODE) - 1 ) ),  IF ( position('_' IN t. CODE) != 0, UPPER( SUBSTR( t. CODE, position('_' IN t. CODE) + 1, 1 ) ), '' ),  IF ( position('_' IN t. CODE) != 0, SUBSTR( t. CODE, position('_' IN t. CODE) + 2, CHAR_LENGTH(t. CODE) ), '' ) ) AS CODE, t. COMMENT, t.DATA_TYPE AS DATA_TYPE, t.isNull AS isNull, t.len AS len, t.columnName AS columnName
					FROM (
						SELECT if(t.COLUMN_KEY='PRI',1,0) as PK,CONCAT( SUBSTR(t.COLUMN_NAME, 1, 1),  IF ( position('_' IN t.COLUMN_NAME) = 0, SUBSTR( t.COLUMN_NAME, 2, CHAR_LENGTH(t.COLUMN_NAME) ), SUBSTR( t.COLUMN_NAME, 2, position('_' IN t.COLUMN_NAME) - 2 ) ),  IF ( position('_' IN t.COLUMN_NAME) != 0, UPPER( SUBSTR( t.COLUMN_NAME, position('_' IN t.COLUMN_NAME) + 1, 1 ) ), '' ),  IF ( position('_' IN t.COLUMN_NAME) != 0, SUBSTR( t.COLUMN_NAME, position('_' IN t.COLUMN_NAME) + 2, CHAR_LENGTH(t.COLUMN_NAME) ), '' ) ) AS CODE, t.COLUMN_COMMENT AS COMMENT, t.DATA_TYPE AS DATA_TYPE, t.IS_NULLABLE AS isNull, t.CHARACTER_MAXIMUM_LENGTH AS len, t.COLUMN_NAME AS columnName
						FROM information_schema.`COLUMNS` t
						WHERE t.TABLE_SCHEMA = #{db} AND t.TABLE_NAME = #{table} and t.COLUMN_KEY!='PRI' and t.COLUMN_NAME not in ('del_flag','date_created','create_id')
					) t
				) t
			) t
		) t
		order by mybatisUpdateXml desc
		]]>
	</select>
	<select id="findMybatisInsert" parameterType="map" resultType="map">
		<![CDATA[
		SELECT
		CONCAT('', t.columnName) AS tableCoumnName,
		CONCAT('', t. CODE, '') AS mybatisEL
		FROM ( SELECT t.PK,CONCAT(  IF ( position('_' IN t. CODE) = 0, SUBSTR( t. CODE, 1, CHAR_LENGTH(t. CODE) ), SUBSTR( t. CODE, 1, position('_' IN t. CODE) - 1 ) ),  IF ( position('_' IN t. CODE) != 0, UPPER( SUBSTR( t. CODE, position('_' IN t. CODE) + 1, 1 ) ), '' ),  IF ( position('_' IN t. CODE) != 0, SUBSTR( t. CODE, position('_' IN t. CODE) + 2, CHAR_LENGTH(t. CODE) ), '' ) ) AS CODE, t. COMMENT, t.DATA_TYPE AS DATA_TYPE, t.isNull AS isNull, t.len AS len, t.columnName AS columnName
		FROM ( SELECT t.PK,CONCAT(  IF ( position('_' IN t. CODE) = 0, SUBSTR( t. CODE, 1, CHAR_LENGTH(t. CODE) ), SUBSTR( t. CODE, 1, position('_' IN t. CODE) - 1 ) ),  IF ( position('_' IN t. CODE) != 0, UPPER( SUBSTR( t. CODE, position('_' IN t. CODE) + 1, 1 ) ), '' ),  IF ( position('_' IN t. CODE) != 0, SUBSTR( t. CODE, position('_' IN t. CODE) + 2, CHAR_LENGTH(t. CODE) ), '' ) ) AS CODE, t. COMMENT, t.DATA_TYPE AS DATA_TYPE, t.isNull AS isNull, t.len AS len, t.columnName AS columnName
		FROM ( SELECT t.PK,CONCAT(  IF ( position('_' IN t. CODE) = 0, SUBSTR( t. CODE, 1, CHAR_LENGTH(t. CODE) ), SUBSTR( t. CODE, 1, position('_' IN t. CODE) - 1 ) ),  IF ( position('_' IN t. CODE) != 0, UPPER( SUBSTR( t. CODE, position('_' IN t. CODE) + 1, 1 ) ), '' ),  IF ( position('_' IN t. CODE) != 0, SUBSTR( t. CODE, position('_' IN t. CODE) + 2, CHAR_LENGTH(t. CODE) ), '' ) ) AS CODE, t. COMMENT, t.DATA_TYPE AS DATA_TYPE, t.isNull AS isNull, t.len AS len, t.columnName AS columnName
		FROM (
		SELECT if(t.COLUMN_KEY='PRI',1,0) as PK,CONCAT( SUBSTR(t.COLUMN_NAME, 1, 1),  IF ( position('_' IN t.COLUMN_NAME) = 0, SUBSTR( t.COLUMN_NAME, 2, CHAR_LENGTH(t.COLUMN_NAME) ), SUBSTR( t.COLUMN_NAME, 2, position('_' IN t.COLUMN_NAME) - 2 ) ),  IF ( position('_' IN t.COLUMN_NAME) != 0, UPPER( SUBSTR( t.COLUMN_NAME, position('_' IN t.COLUMN_NAME) + 1, 1 ) ), '' ),  IF ( position('_' IN t.COLUMN_NAME) != 0, SUBSTR( t.COLUMN_NAME, position('_' IN t.COLUMN_NAME) + 2, CHAR_LENGTH(t.COLUMN_NAME) ), '' ) ) AS CODE, t.COLUMN_COMMENT AS COMMENT, t.DATA_TYPE AS DATA_TYPE, t.IS_NULLABLE AS isNull, t.CHARACTER_MAXIMUM_LENGTH AS len, t.COLUMN_NAME AS columnName
		FROM information_schema.`COLUMNS` t
		WHERE t.TABLE_SCHEMA = #{db} AND t.TABLE_NAME = #{table}
		) t
		) t
		) t
		) t
		 ]]>
	</select>

</mapper>